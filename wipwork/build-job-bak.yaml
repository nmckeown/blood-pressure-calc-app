 # build source code and run unit tests
  build:
    name: Build & Test
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Run UNIT Tests
        run: |
          dotnet test BPCalcUnit/BPCalcUnitTests.csproj --collect "XPlat Code Coverage"
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:"./BPCalcUnit/TestResults/*/coverage.cobertura.xml" -targetdir:"./BPCalcUnit/coverage-report" -reporttypes:Html

      - name: Run Acceptance Tests
        run: dotnet test BPCalcAcceptance/BPCalcAcceptance.csproj --collect "Code Coverage"

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: ./BPCalcUnit/TestResults/

      - name: Upload Coverage Report HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-report
          path: ./BPCalcUnit/coverage-report/

      - name: Upload BDD Report
        uses: actions/upload-artifact@v4
        with:
          name: bdd-coverage
          path: ./BPCalcAcceptance/TestResults/

      - name: Check Env
        run: echo "DOTNET_ROOT="${{ env.DOTNET_ROOT }}

      - name: dotnet publish
        run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          #startup-command: "dotnet BPCalculator.dll"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'

      #- name: debug
      #  run: |
      #    echo "AZURE_WEBAPP_PACKAGE_PATH="${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      #    cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp
      #    pwd
      #    ls -latR

      - name: Run Selenium Tests
        #run: dotnet test ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}SeleniumTest.dll /Settings:SeleniumTest.runsettings --logger:"trx;LogFileName=selenium.trx"
        run: |
          pwd
          dotnet test ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp/SeleniumTest.dll /Settings:SeleniumTest.runsettings --logger:"html;LogFileName=selenium.html"

      # Upload results of selenium tests
      - uses: actions/upload-artifact@v4
        with:
          name: Selenium Tests Results
          path: TestResults/selenium.html