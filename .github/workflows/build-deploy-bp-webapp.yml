# Author: Noel McKeown (TUD)
# Student Number: x00218705
# Date: Dec-2024
# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.

name: Build and deploy BP Calculator ASP.Net Core app to an Azure Web App

env:
  AZURE_PROD_WEBAPP_NAME: prod-ca1app               # prod webapp
  AZURE_STAGING_WEBAPP_NAME: staging-ca1app        # staging webapp
  AZURE_RESOURCE_GROUP: ca1rg
  AZURE_SUB: 9ec68712-3805-4cf9-a4c1-4e5951df302b
  AZURE_WEBAPP_PACKAGE_PATH: 'publish'              # set this to the path to your web app project, defaults to the repository root
  E2E_STAGING_FILE: 'SeleniumTest.staging.runsettings'
  E2E_PROD_FILE: 'SeleniumTest.prod.runsettings'
  DOTNET_VERSION: '6'                               # set this to the .NET Core version to use
  PROD_URI: https://ca1app.azurewebsites.net/    

on:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  # build feature branch
  build_feature:
    name: Build Feature Branch
    if: true
    runs-on: windows-latest

    steps:
      # checkout feature branch
      - uses: actions/checkout@v4
        with:
          ref: pulse-pressure-feature

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set Up Dependency Caching
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # build app
      - name: Build with dotnet
        run: dotnet build --configuration Release

      # run unit tests
      - name: Run UNIT Tests
        run: |
          dotnet test BPCalcUnit/BPCalcUnitTests.csproj --collect "XPlat Code Coverage"
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:"./BPCalcUnit/TestResults/*/coverage.cobertura.xml" -targetdir:"./BPCalcUnit/coverage-report" -reporttypes:Html

      # publish artifact
      - name: dotnet Publish
        run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'

      # upload build artifact for deploy job
      - name: Upload artifact for Deployment Job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app-feature
          path: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'

  # provision staging environment
  provision_staging:
    name: Provision Staging Infra
    if: false
    #needs: owasp_dependency_check
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@main

      # Log into Azure
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy ARM template
      - name: Provision Staging
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./IaC/webapp.template.json
          parameters: sites_ca1app_name=${{ env.AZURE_STAGING_WEBAPP_NAME }}

  # build source code and run unit/acceptance tests
  build:
    name: Build & Test
    if: true
    runs-on: windows-latest
    #needs: provision_staging

    steps:
      - uses: actions/checkout@v4   

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set Up Dependency Caching
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # build app
      - name: Build with dotnet
        run: dotnet build --configuration Release

      # run unit tests
      - name: Run UNIT Tests
        run: |
          dotnet test BPCalcUnit/BPCalcUnitTests.csproj --collect "XPlat Code Coverage"
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:"./BPCalcUnit/TestResults/*/coverage.cobertura.xml" -targetdir:"./BPCalcUnit/coverage-report" -reporttypes:Html

      # run BDD acceptance tests
      - name: Run Acceptance Tests
        run: dotnet test BPCalcAcceptance/BPCalcAcceptance.csproj --collect "Code Coverage"

      # upload reports
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: ./BPCalcUnit/TestResults/

      - name: Upload Coverage Report HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-report
          path: ./BPCalcUnit/coverage-report/

      - name: Upload BDD Report
        uses: actions/upload-artifact@v4
        with:
          name: bdd-coverage
          path: ./BPCalcAcceptance/TestResults/

      # publish artifact
      - name: dotnet Publish
        run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'

      # upload build artifact for deploy job
      - name: Upload artifact for Deployment Job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'

  # code analysis for bugs, code smells and vulns
  scan_code:
    name: Static Code Analysis
    if: true
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=nmckeown
            -Dsonar.projectKey=nmckeown_blood-pressure-calc-app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     

  # scans code depenencies for security vulns
  owasp_dependency_check:
    name: OWASP Depenency Check
    if: true
    needs: scan_code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'BMI'
          path: '.'
          format: 'HTML'    
          args: >
            --failOnCVSS 8            
          # fail if CVSS score (CVE scoring system) is High >=8
          
      - name: Upload Test results
        uses: actions/upload-artifact@v4
        with:
          name: Depcheck report
          path: ${{github.workspace}}/reports

 # deploy code to staging webapp service
  deploy_staging:
    name: Deploy Staging & E2E
    needs: build
    permissions:
      contents: none
    runs-on: windows-latest
    environment:
      name: 'staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:    
      - uses: actions/checkout@v4

      # download artifact from build job
      - name: Download Artifact From Build Job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      # Log into Azure
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # get publishing profile for newly provisioned staging environment
      - name: Get Publish Profile
        run: |
          az webapp deployment list-publishing-credentials --name ${{ vars.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --subscription ${{ env.AZURE_SUB }} | Tee-Object -Variable PublishProfile
          echo $PublishProfile >>  %GITHUB_ENV%

      # deploy webapp to staging environment
      - name: Deploy to Staging WebApp
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          #startup-command: "dotnet BPCalculator.dll"
          publish-profile: ${{ env.PublishProfile }}
          package: .

      # run selenium e2e tests
      - name: Run E2E Tests
        run: dotnet test SeleniumTest.dll /Settings:${{ vars.E2E_RUN_FILE }} --logger:"html;LogFileName=selenium.html"

      # Upload results of selenium tests
      - uses: actions/upload-artifact@v4
        with:
          name: E2E Tests Results
          path: TestResults/selenium.html

  # deploy feature to staging webapp service
  deploy_staging_feature:
    name: Deploy Feature to Staging
    needs: deploy_staging
    permissions:
      contents: none
      issues: write
    runs-on: windows-latest
    environment:
      name: 'staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:    
      - uses: actions/checkout@v4
        with:
          ref: pulse-pressure-feature

      # download artifact from build job
      - name: Download Artifact From Build Job
        uses: actions/download-artifact@v4
        with:
          name: .net-app-feature

      # Log into Azure
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # get publishing profile for newly provisioned staging environment
      - name: Get Publish Profile
        run: |
          az webapp deployment list-publishing-credentials --name ${{ vars.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --subscription ${{ env.AZURE_SUB }} | Tee-Object -Variable PublishProfile
          echo $PublishProfile >>  %GITHUB_ENV%

      # deploy webapp to staging environment
      - name: Deploy Feature to Staging WebApp
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          #startup-command: "dotnet BPCalculator.dll"
          publish-profile: ${{ env.PublishProfile }}
          package: .
      
      # run selenium e2e tests
      - name: Run E2E Tests
        run: dotnet test SeleniumTest.dll /Settings:${{ vars.E2E_RUN_FILE }} --logger:"html;LogFileName=selenium_feature.html"

      # Upload results of selenium tests
      - uses: actions/upload-artifact@v4
        with:
          name: E2E Feature Tests Results
          path: TestResults/selenium_feature.html

  # baseline app security scan / pen test
  zap_baseline_scan:
    name: Zap Pen Test
    if: true
    needs: deploy_staging
    runs-on: ubuntu-latest

    steps:
    - name: Pull Docker image for ZAP
      run: docker pull zaproxy/zap-weekly

    - name: Run baseline scan
      run: docker run -v /report:/zap/wrk/:rw --user root -t zaproxy/zap-weekly zap-baseline.py -t ${{env.URI}} -I -r zapreport.html
  
    - uses: actions/upload-artifact@v4
      name: upload ZAP report
      with:
        name: ZAPreport
        path: /report/zapreport.html

  # performance / load testing
  k6_load_test:
    name: K6 Perf Testing
    if: true
    needs: zap_baseline_scan
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Pull Docker image for k6
      run: docker pull grafana/k6

    - name: Run k6 load test, capture report
      run: docker run -i grafana/k6 run - <k6tests/perf2.js > k6report.txt

    - uses: actions/upload-artifact@v4
      with:
        name: k6report
        path: k6report.txt

  # destroy staging environment
  delete_staging:
    name: Teardown Staging
    needs: deploy_staging_feature
    runs-on: ubuntu-latest
    permissions:
      issues: write

    steps:
      # Log into Azure
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # manual approval to destroy staging webapp
      - uses: trstringer/manual-approval@v1
        timeout-minutes: 10
        with:
          secret: ${{ github.TOKEN }}
          approvers: nmckeown
          minimum-approvals: 1
          issue-title: "Destroy Staging Env"
          issue-body: "Please approve or deny"
          exclude-workflow-initiator-as-approver: false
          additional-approved-words: ''
          additional-denied-words: ''

      # delete staging web app
      - name: Delete Staging WebApp
        run: az webapp delete --name ${{env.AZURE_STAGING_WEBAPP_NAME}} --resource-group ${{env.AZURE_RESOURCE_GROUP}}