name: Deploy New Feature

env:
  AZURE_PROD_WEBAPP_NAME: prod-ca1app               # prod webapp
  AZURE_STAGING_WEBAPP_NAME: staging-ca1app        # staging webapp
  AZURE_RESOURCE_GROUP: ca1rg
  AZURE_SUB: 9ec68712-3805-4cf9-a4c1-4e5951df302b
  AZURE_WEBAPP_PACKAGE_PATH: 'publish'              # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6'                               # set this to the .NET Core version to use
  URI: https://ca1app.azurewebsites.net/    

on:
  push:
    branches: [ "**-feature/" ]
  pull_request:
    branches: [ "**-feature/" ]
  workflow_dispatch:

jobs:
  build_feature:
    name: Build & Test
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: pulse-pressure-feature

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set Up Dependency Caching
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # build app
      - name: Build with dotnet
        run: dotnet build --configuration Release

      # run unit tests
      - name: Run UNIT Tests
        run: |
          dotnet test BPCalcUnit/BPCalcUnitTests.csproj --collect "XPlat Code Coverage"
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:"./BPCalcUnit/TestResults/*/coverage.cobertura.xml" -targetdir:"./BPCalcUnit/coverage-report" -reporttypes:Html

      # publish artifact
      - name: dotnet Publish
        run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'

      # upload build artifact for deploy job
      - name: Upload artifact for Deployment Job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app-feature
          path: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'

  # deploy code to webapp service
  deploy_staging_feature:
    name: Deploy Feature to Staging
    needs: build_feature
    permissions:
      contents: none
    runs-on: windows-latest
    environment:
      name: 'Staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:    
      - uses: actions/checkout@v4

      # download artifact from build job
      - name: Download Artifact From Build Job
        uses: actions/download-artifact@v4
        with:
          name: .net-app-feature

      # Log into Azure
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # get publishing profile for newly provisioned staging environment
      - name: Get Publish Profile
        run: |
          az webapp deployment list-publishing-credentials --name ${{env.AZURE_STAGING_WEBAPP_NAME}} --resource-group ${{env.AZURE_RESOURCE_GROUP}} --subscription ${{env.AZURE_SUB}} | Tee-Object -Variable PublishProfile
          echo $PublishProfile >> $GITHUB_ENV

      # deploy webapp to staging environment
      - name: Deploy to Staging WebApp
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_STAGING_WEBAPP_NAME }}
          #startup-command: "dotnet BPCalculator.dll"
          publish-profile: ${{ env.PublishProfile }}
          package: .
